usage:
each of the following programs read their input object on stdin, and output the
result of their transform to stdout:

    vcone_to_hcone  # transforms a vcone into an hcone
    vpoly_to_hpoly  # transforms a vpolyhedron into an hpolyhedron
    hcone_to_vcone  # transforms an hcone into a vcone
    hpoly_to_vpoly  # transforms an hpolyhedron into an vpolyhedron

input format is as follows:
  hcone := dimension   (vector ws)*  
  vcone := dimension   (vector ws)*  
  hpoly := dimension+1 (vector ws constraint ws)*  
  vpoly := dimension   ('U' | 'V') ws ((['U'] ws vector)* | (['V'] ws vector)*)

  ws         := whitespace, as would be read by "cin >> ws;"
  dimension  := a positive integer.  For hpoly, add one to the dimension of
                the space (this extra dimension if for the constraint)
  vector     := (dimension) doubles separated by whitespace  
  constraint := a double (the value b_i in <A_i,x> <= b_i)  
  'V' | 'U'  := the literal character 'U' or 'V'

  vpoly contains two matrices:
    U - contains the rays of the vpolyhedron
    V - contains the points of the vpolyhedron

On input, enter 'U' or 'V' to indicate which matrix should receive the vectors
that follow.  You can switch back and forth as you like, but either 'U' or 'V'
must be entered before starting to input vectors.
